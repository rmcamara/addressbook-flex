<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////////
//    
//    Copyright 2008 Ross Camara
//
//    This file is part of Addressbook.
//
//    Foobar is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    AddressBook is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
//
///////////////////////////////////////////////////////////////////////////////
-->
<mx:Form 
    xmlns:mx="http://www.adobe.com/2006/mxml"
    creationComplete="init();" 
    implements="net.thecamaras.IEditor">
    <mx:Style >
        .textInput {
            text-align:left;   
        }
    </mx:Style>

    <mx:Script >
        <![CDATA[
            import net.thecamaras.models.BaseModel;
            import mx.binding.utils.BindingUtils;
            import mx.events.PropertyChangeEventKind;
            import mx.events.PropertyChangeEvent;
            import net.thecamaras.models.Place;
            import mx.events.ValidationResultEvent;
            import net.thecamaras.models.Person;
            public static const EDIT_WIDTH:int = 280;
            
            [Bindable]
            public var _location:Place = new Place(null);

            private var _dirty:Boolean = false;
            
            [Bindable]
            public function get dirty():Boolean { return _dirty || _location.id == BaseModel.NEW_ID; }
            public function set dirty(arg:Boolean):void
            { 
                var prop:PropertyChangeEvent = 
                    PropertyChangeEvent.createUpdateEvent(this, "dirty", _dirty, arg);
                _dirty = arg;
                dispatchEvent(prop);
            }
            
            private function init():void{
                nameTxt.addEventListener(Event.CHANGE, makeDirty);
                addressTxt.addEventListener(Event.CHANGE, makeDirty);
                address2Txt.addEventListener(Event.CHANGE, makeDirty);
                cityTxt.addEventListener(Event.CHANGE, makeDirty);
                stateCmb.addEventListener(Event.CHANGE, makeDirty);
                zipcodeTxt.addEventListener(Event.CHANGE, makeDirty);
                phoneTxt.addEventListener(Event.CHANGE, makeDirty);
                detailsTxt.addEventListener(Event.CHANGE, makeDirty);
                
                BindingUtils.bindSetter(loadState, this, "_location");
            }
            
            private function loadState(location:Place):void{
                var i:int;
                i = 0;
                for each (var x:Object in stateCmb.dataProvider){
                    if (x.data == _location.state){
                        stateCmb.selectedIndex = i;
                        break;
                    }
                    i++;
                }
            }
            
            private function makeDirty(e:Event):void{
                dirty = true;
            }
            
            public function set location(location:Place):void {
                this._location = location; 
            }
            
            public function validate():String{
                var vResult:ValidationResultEvent;
                var result:String = "";
                
                vResult = nameVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                vResult = addressVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                vResult = cityVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                vResult = zipcodeVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                vResult = phoneVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                return result;
            }
            
            public function isNew():Boolean{
                return _location.id == BaseModel.NEW_ID;
            }
        ]]>
    </mx:Script>
    
    <mx:StringValidator id="nameVal" 
        source="{nameTxt}" property="text" maxLength="100" minLength="1" />
    <mx:StringValidator id="addressVal" 
        source="{addressTxt}" property="text" minLength="1" />
    <mx:StringValidator id="cityVal" 
        source="{cityTxt}" property="text" maxLength="100" minLength="1" />
    <mx:ZipCodeValidator id="zipcodeVal" 
        source="{zipcodeTxt}" property="text" />
    <mx:PhoneNumberValidator id="phoneVal" 
        source="{phoneTxt}" property="text" required="false" />    
    
    <mx:FormHeading label="Edit Details...." />
        <mx:FormItem label="Name:">
            <mx:TextInput id="nameTxt" 
                text="{_location.name}"
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="Address:">
            <mx:TextInput id="addressTxt"
                text="{_location.address}" 
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="Address2:" >
            <mx:TextInput id="address2Txt" 
                text="{_location.address2}"
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="City:">
            <mx:TextInput id="cityTxt"
                text="{_location.city}"
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="State:" >
            <mx:ComboBox id="stateCmb" 
                dataProvider="{Constants.STATE_LIST}"
                selectedIndex="{Constants.STATE_LIST.indexOf(_location.state)}"
                width="{EDIT_WIDTH}" styleName="textInput" >
            </mx:ComboBox>
        </mx:FormItem>
        <mx:FormItem label="Zipcode:">
            <mx:TextInput id="zipcodeTxt"
                text="{_location.zipcode}"
                maxChars="5"
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="Phone:">
            <mx:TextInput id="phoneTxt"
                text="{_location.phone}"
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="Details:" >
            <mx:TextArea id="detailsTxt" 
                text="{_location.details}"
                width="{EDIT_WIDTH}" height="225" 
                styleName="textInput"/>
    </mx:FormItem>
</mx:Form>
