<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////////
//    
//    Copyright 2008 Ross Camara
//
//    This file is part of Addressbook.
//
//    Foobar is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    AddressBook is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
//
///////////////////////////////////////////////////////////////////////////////
-->
<mx:Form 
    xmlns:mx="http://www.adobe.com/2006/mxml"
    creationComplete="init();" 
    implements="net.thecamaras.IEditor">
    <mx:Style >
        .textInput {
            text-align:left;   
        }
    </mx:Style>

    <mx:Script >
        <![CDATA[
            import net.thecamaras.models.BaseModel;
            import mx.events.PropertyChangeEvent;
            import mx.events.ValidationResultEvent;
            import net.thecamaras.models.Person;
            public static const EDIT_WIDTH:int = 280;
            
            [Bindable]
            private var _person:Person = new Person(null);

            private var _dirty:Boolean = false;
            
            [Bindable]
            public function get dirty():Boolean { return _dirty || _person.id == BaseModel.NEW_ID; }
            public function set dirty(arg:Boolean):void{ 
                var prop:PropertyChangeEvent = 
                    PropertyChangeEvent.createUpdateEvent(this, "dirty", _dirty, arg);
                _dirty = arg;
                dispatchEvent(prop);
            }
            
            private function init():void{
                title.addEventListener(Event.CHANGE, makeDirty);
                firstName.addEventListener(Event.CHANGE, makeDirty);
                lastName.addEventListener(Event.CHANGE, makeDirty);
                email.addEventListener(Event.CHANGE, makeDirty);
                cellphone.addEventListener(Event.CHANGE, makeDirty);
                birth.addEventListener(Event.CHANGE, makeDirty);
                details.addEventListener(Event.CHANGE, makeDirty);
            }
            
            private function makeDirty(e:Event):void{
                dirty = true;
            }
            
            public function set person(person:Person):void {
                this._person = person; 
            }
            
            public function validate():String{
                var result:String = "";
                var vResult:ValidationResultEvent;
                vResult = firstNameVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                vResult = lastNameVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                vResult = emailVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                vResult = cellVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                vResult = birthDateVal.validate();
                if (vResult.type == ValidationResultEvent.INVALID){
                    result += vResult.message + "\n";
                }
                
                return result;
            }
            
            public function isNew():Boolean{
                return _person.id == BaseModel.NEW_ID;
            }
        ]]>
    </mx:Script>
        
    <mx:StringValidator id="firstNameVal" 
        source="{firstName}" property="text" maxLength="100" />
    <mx:StringValidator id="lastNameVal" 
        source="{lastName}" property="text" maxLength="100" required="false"/>
    <mx:EmailValidator id="emailVal" 
        source="{email}" property="text" required="false"/>
    <mx:PhoneNumberValidator id="cellVal" 
        source="{cellphone}" property="text" required="false" />
    <mx:DateValidator id="birthDateVal"
        source="{birth}" property="selectedDate" required="false"/>    
    
    <mx:FormHeading label="Edit Details...." />
        <mx:FormItem label="Title:" >
            <mx:ComboBox id="title" 
                dataProvider="{Constants.TITLE_LIST}"
                selectedIndex="{Constants.TITLE_LIST.indexOf(_person.title)}"
                width="{EDIT_WIDTH}" styleName="textInput" >
            </mx:ComboBox>
        </mx:FormItem>
        <mx:FormItem label="First Name:">
            <mx:TextInput id="firstName" 
                text="{_person.firstname}"
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="Last Name:">
            <mx:TextInput id="lastName"
                text="{_person.lastname}" 
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="Email:" >
            <mx:TextInput id="email" 
                text="{_person.email}"
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="Cell Phone:">
            <mx:TextInput id="cellphone"
                text="{_person.cell}"
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="Birthdate" >
            <mx:DateField id="birth"
                selectedDate="{_person.birthdate}" editable="true"
                width="{EDIT_WIDTH}" styleName="textInput"/>
        </mx:FormItem>
        <mx:FormItem label="Details:" >
            <mx:TextArea id="details" 
                text="{_person.details}"
                width="{EDIT_WIDTH}" height="225" 
                styleName="textInput"/>
    </mx:FormItem>
</mx:Form>
